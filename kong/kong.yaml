apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
        istio.io/rev: default
    spec:
      containers:
      - name: kong
        image: kong:3.3
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: /kong/kong.yaml
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        ports:
        - containerPort: 8000
        - containerPort: 8443
        volumeMounts:
        - name: kong-config
          mountPath: /kong
      volumes:
      - name: kong-config
        configMap:
          name: kong-config
---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: kong
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
data:
  kong.yaml: |
    _format_version: "2.1"
    _transform: true

    services:
      - name: user-service
        url: http://user-service-service
        routes:
        - name: register
          paths:
            - /api/v1/users/register
          strip_path: false
          methods:
            - POST
        - name: login
          paths:
            - /api/v1/users/login
          strip_path: false
          methods:
            - POST
        - name: protected-routes
          paths:
            - /api/v1/users
            - /api/v1/users/~[0-9]+
          strip_path: false
          methods:
            - GET
            - PUT
          plugins:
            - name: jwt
              config:
                secret_is_base64: false
                key_claim_name: kid
                claims_to_verify:
                  - exp
      - name: product-query-service
        url: http://product-query-service-service/api/v1/products
        routes:
          - name: product-query-service-route
            paths:
              - /api/v1/products-query
            strip_path: true
            plugins:
            - name: jwt
              config:
                secret_is_base64: false
                key_claim_name: kid
                claims_to_verify:
                  - exp
      - name: product-command-service
        url: http://product-command-service-service/api/v1/products
        routes:
          - name: product-command-service-route
            paths:
              - /api/v1/products-command
            strip_path: true
            plugins:
            - name: jwt
              config:
                secret_is_base64: false
                key_claim_name: kid
                claims_to_verify:
                  - exp
      - name: order-service
        url: http://order-service-service
        routes:
          - name: payment-notification
            paths:
              - /api/v1/orders/payments/notifications
            strip_path: false
            methods:
              - POST
          - name: protected-routes
            paths:
              - /api/v1/orders
              - /api/v1/orders/~[0-9]+
            strip_path: false
            methods:
              - GET
              - POST
            plugins:
              - name: jwt
                config:
                  secret_is_base64: false
                  key_claim_name: kid
                  claims_to_verify:
                    - exp
    
    consumers:
    - username: user
      jwt_secrets:
        - key: "user-key" 
          secret: "1234"
          algorithm: HS256 